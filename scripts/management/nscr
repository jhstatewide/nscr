#!/bin/bash

# NSCR Registry Management Script
# Provides easy commands for managing your NSCR registry

REGISTRY_URL="localhost:7000"

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_usage() {
    echo "NSCR Registry Management Script"
    echo ""
    echo "Usage: $0 <command> [options]"
    echo ""
    echo "Commands:"
    echo "  list-repos                    List all repositories"
    echo "  list-tags <repo>              List all tags for a repository"
    echo "  delete-image <repo> <tag>     Delete an image by repository and tag"
    echo "  garbage-collect               Run garbage collection to free space"
    echo "  blob-count                    Show current blob count"
    echo "  status                        Show registry status"
    echo ""
    echo "Examples:"
    echo "  $0 list-repos"
    echo "  $0 list-tags debian"
    echo "  $0 delete-image debian bullseye-slim"
    echo "  $0 garbage-collect"
}

list_repositories() {
    echo -e "${BLUE}Listing repositories...${NC}"
    curl -s "http://${REGISTRY_URL}/v2/_catalog" | jq -r '.repositories[]' | sort
}

list_tags() {
    local repo="$1"
    if [ -z "$repo" ]; then
        echo -e "${YELLOW}Error: Repository name required${NC}"
        echo "Usage: $0 list-tags <repository>"
        exit 1
    fi
    
    echo -e "${BLUE}Listing tags for repository: $repo${NC}"
    curl -s "http://${REGISTRY_URL}/v2/${repo}/tags/list" | jq -r '.tags[]' | sort
}

delete_image() {
    local repo="$1"
    local tag="$2"
    
    if [ -z "$repo" ] || [ -z "$tag" ]; then
        echo -e "${YELLOW}Error: Repository and tag required${NC}"
        echo "Usage: $0 delete-image <repository> <tag>"
        exit 1
    fi
    
    echo -e "${BLUE}Deleting image: $repo:$tag${NC}"
    response=$(curl -s -w "%{http_code}" -X DELETE "http://${REGISTRY_URL}/v2/${repo}/manifests/${tag}")
    http_code="${response: -3}"
    
    if [ "$http_code" = "202" ]; then
        echo -e "${GREEN}Successfully deleted $repo:$tag${NC}"
    else
        echo -e "${YELLOW}Failed to delete $repo:$tag (HTTP $http_code)${NC}"
    fi
}

garbage_collect() {
    echo -e "${BLUE}Running garbage collection...${NC}"
    response=$(curl -s "http://${REGISTRY_URL}/api/garbage-collect")
    
    blobs_removed=$(echo "$response" | jq -r '.blobsRemoved')
    space_freed=$(echo "$response" | jq -r '.spaceFreed')
    manifests_removed=$(echo "$response" | jq -r '.manifestsRemoved')
    
    echo -e "${GREEN}Garbage collection completed:${NC}"
    echo "  Blobs removed: $blobs_removed"
    echo "  Space freed: $space_freed bytes"
    echo "  Manifests removed: $manifests_removed"
}

blob_count() {
    echo -e "${BLUE}Current blob count:${NC}"
    curl -s "http://${REGISTRY_URL}/api/blobs" | wc -l
}

status() {
    echo -e "${BLUE}Registry Status:${NC}"
    echo ""
    
    # Check if registry is running
    if curl -s "http://${REGISTRY_URL}/v2" >/dev/null; then
        echo -e "${GREEN}✓ Registry is running${NC}"
    else
        echo -e "${YELLOW}✗ Registry is not responding${NC}"
        exit 1
    fi
    
    echo ""
    echo "Repositories:"
    list_repositories
    echo ""
    echo "Blob count:"
    blob_count
}

# Main script logic
case "$1" in
    "list-repos")
        list_repositories
        ;;
    "list-tags")
        list_tags "$2"
        ;;
    "delete-image")
        delete_image "$2" "$3"
        ;;
    "garbage-collect")
        garbage_collect
        ;;
    "blob-count")
        blob_count
        ;;
    "status")
        status
        ;;
    *)
        print_usage
        ;;
esac
