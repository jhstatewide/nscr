name: Test and Build

on:
    push:
        branches: [main, master]
        tags: ["v*"]
    pull_request:
        branches: [main, master]

jobs:
    test:
        runs-on: ubuntu-latest
        permissions:
            contents: read

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.11.0'
                  cache: 'npm'
                  cache-dependency-path: 'frontend/package-lock.json'

            - name: Cache Gradle packages
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Make gradlew executable
              run: chmod +x ./gradlew

            - name: Install frontend dependencies
              run: |
                  cd frontend
                  npm install

            - name: Run code quality checks (Detekt)
              run: ./gradlew detekt

            - name: Run unit tests
              run: ./gradlew test

            - name: Build the application
              run: ./gradlew build

            - name: Build Docker images (no push)
              run: |
                  ./gradlew dockerBuildAll

            - name: Run quick torture test
              run: ./gradlew tortureTestQuick

            - name: Clean up test data
              if: always()
              run: ./gradlew cleanupTestData

            - name: Clean up Docker images
              if: always()
              run: ./gradlew cleanupAllTestDockerImages
